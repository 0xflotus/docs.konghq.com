{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["/* globals $, history, analytics */\n\n'use strict'\n\n// Gitter config\n;((window.gitter = {}).chat = {}).options = {\n  room: 'Mashape/kong',\n  activationElement: false\n}\n\n$(function () {\n  var $window = $(window)\n  var $docs = $('#documentation')\n\n  $('.navbar-toggle').on('click', function () {\n    var $navbar = $($(this).data('target'))\n    $navbar.slideToggle(150)\n  })\n\n  $('.scroll-to').on('click', function (e) {\n    e.preventDefault()\n\n    $('html, body').animate({\n      scrollTop: $($(this).attr('href')).offset().top - 107 // Header height\n    }, 700)\n  })\n\n  /*\n    Gitter Sidecar\n    1. Sets up click handler for gitter toggle button\n    2. When gitter is toggled for the first time,\n      set up gitter sidecar event handler\n  */\n\n  var $gitterBtn = $('#support-bubble')\n\n  var setupGitter = {\n    _ready: $.Deferred(),\n    ds: 'data-gitter-toggle-chat-state',\n\n    init: function () {\n      var chatElement = document.querySelector('.gitter-chat-embed')\n\n      chatElement.addEventListener('gitter-chat-toggle', function (e) {\n        if (e.detail.state) {\n          setupGitter.setClose()\n        } else {\n          setupGitter.setOpen()\n        }\n      })\n\n      this._ready.resolve()\n    },\n\n    // Set gitter button to close, 'X' appearance\n    setClose: function () {\n      $gitterBtn.attr(this.ds, 'false')\n        .addClass('close-gitter')\n    },\n\n    // Set gitter button to open, 'Chat' appearance\n    setOpen: function () {\n      $gitterBtn.attr(this.ds, 'true')\n        .removeClass('close-gitter')\n    },\n\n    // Getter for sidecar init state\n    ready: function () {\n      return this._ready.promise()\n    }\n  }\n\n  $gitterBtn.one('click', function () {\n    setupGitter.init()\n  })\n\n  // Change header download button color\n\n  if (!$('body#enterprise').length) {\n    var introSectionHeight = $('.section.intro-section').outerHeight() || 50\n    var $downloadBtn = $('.navbar-nav').find('.button')\n\n    $window.on('scroll', function () {\n      var scrollTop = $(this).scrollTop()\n\n      if (scrollTop > introSectionHeight) {\n        $downloadBtn.removeClass('button-dark').addClass('button-primary')\n      } else {\n        $downloadBtn.removeClass('button-primary').addClass('button-dark')\n      }\n    })\n  }\n\n  // Page section on contribute page\n\n  $('.toggle-page-section').on('click', function (e) {\n    e.preventDefault()\n    var $link = $(this)\n\n    $link.parent().next('.page-section').stop().slideToggle(300, function () {\n      $link.toggleClass('active')\n    })\n  })\n\n  // Tabs on download page\n\n  var $tabs = $('.tab-list li')\n  var $tabPanes = $('.tab-pane')\n\n  $tabs.on('click', function (e, disableTracking) {\n    e.preventDefault()\n\n    var tabId = $(this).find('a').attr('href')\n\n    $tabs.removeClass('active').filter(this).addClass('active')\n    $tabPanes.removeClass('active').filter(tabId).addClass('active')\n\n    if (history.pushState) {\n      history.pushState(null, null, tabId)\n    } else {\n      window.location.hash = tabId\n    }\n\n    if (!disableTracking) {\n      analytics.track('Choose installation method', {\n        installationMethod: tabId.substr(1)\n      })\n    }\n  })\n\n  if (window.location.hash) {\n    $tabs.find('a[href=\"' + window.location.hash + '\"]').trigger('click', true)\n  }\n\n  // Subscribe form\n\n  $('.subscribe-form').on('submit', function (e) {\n    e.preventDefault()\n\n    var form = $(this)\n    var email = form.find('[name=\"email\"]').val()\n    var time = new Date().toString()\n\n    var traits = {\n      email: email,\n      environment: 'kong',\n      newsletter_updates: true,\n      created_at: time\n    }\n\n    form.addClass('loading')\n\n    var track = function () {\n      form.addClass('complete')\n\n      analytics.track('request_newsletter_updates', {\n        email: email,\n        request_date: time\n      })\n    }\n\n    analytics.identify(email, traits, track)\n  })\n\n  // Enterprise page demo request form\n\n  $('.demo-request-form').on('submit', function (e) {\n    e.preventDefault()\n\n    var form = $(this)\n    var data = form.serializeArray()\n    var submitTime = new Date().toString()\n    var payload = {}\n    var fieldValues = {}\n    var relateiqFieldIds = {\n      title: 8,\n      tell_us_more: 6,\n      email: 7,\n      phone: 9,\n      deployment: 14,\n      company: 10,\n      name: 13,\n      environment: 16\n    }\n\n    form.addClass('loading')\n\n    for (var i = 0; i < data.length; i++) {\n      payload[data[i].name] = data[i].value\n    }\n\n    payload.environment = 'kong'\n\n    var traits = $.extend({\n      enterprise: true,\n      created_at: submitTime\n    }, payload)\n\n    analytics.identify(payload.email, traits, function () {\n      analytics.track('request_enterprise_demo', $.extend({\n        request_date: submitTime\n      }, payload))\n    })\n\n    for (var field in payload) {\n      if (payload[field]) {\n        fieldValues[relateiqFieldIds[field]] = [{\n          raw: payload[field]\n        }]\n      }\n    }\n\n    $.ajax({\n      url: 'https://mashaper-relateiq-v1.p.mashape.com/accounts',\n      method: 'POST',\n      headers: {\n        'authorization': 'Basic NTU2ZDcxYzdlNGIwMmM5ZTM3YjgxNzc1Ok9NbFNBVGM1QkFTOG1JbEtXZENMZFZ2Z3RqYQ==',\n        'x-mashape-key': 'mJUINHSWBYmshREqNlfTBKtbBHDZp1N7VKhjsnUIUo4f4r3pVj'\n      },\n      data: JSON.stringify({\n        name: payload.email,\n        fieldValues: fieldValues\n      })\n    }).always(function () {\n      form.addClass('complete')\n    })\n  })\n\n  // Docs page navigation\n  if ($docs.length) {\n    var $nav = $docs.find('.page-navigation')\n    var $navItems = $nav.find('a')\n    var hash = window.location.hash\n\n    var setNavItemActive = function () {\n      $navItems.removeClass('active').filter(this).addClass('active')\n    }\n\n    if (hash) {\n      $navItems.each(function () {\n        if ($(this).attr('href').indexOf(hash) !== -1) {\n          setNavItemActive.call(this)\n        }\n      })\n    }\n\n    $navItems.on('click', setNavItemActive)\n  }\n\n  // Analytics\n\n  $('[href^=\"/install\"]').each(function () {\n    var $link = $(this)\n\n    analytics.trackLink(this, 'Clicked download', {\n      section: $link.closest('.navbar').length ? 'header' : 'page',\n      pathname: window.location.pathname,\n      type: $link.hasClass('button') ? 'button' : 'link'\n    })\n  })\n\n  analytics.track(\n      'Viewed ' + $.trim(document.title.split('|').shift()) + ' page'\n  )\n\n  $('.plugin-plate-link').each(function () {\n    analytics.trackLink(this, 'Click on plugin', {\n      plugin_type: $(this).closest('.plugin-plate').find('h3').text()\n    })\n  })\n\n  $('#documentation .page-navigation a').each(function () {\n    analytics.trackLink(this, 'Click documentation link', {\n      documentation_name: $(this).text()\n    })\n  })\n\n  $('.community-plate a').each(function () {\n    analytics.trackLink(this, 'Click community link', {\n      community_type: $.trim($(this).closest('.community-plate').find('h4').text())\n    })\n  })\n\n  analytics.trackLink($('a[href=\"#comparison\"]')[0], 'Clicked Why Kong')\n})\n"],"file":"../app.js"}